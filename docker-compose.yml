version: "3.9"
services:
  nginx:
    image: rgolea/baneverywhere-proxy:latest
    container_name: baneverywhere-nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    volumes:
      - /etc/letsencrypt/:/etc/letsencrypt/

  api:
    image: rgolea/baneverywhere:latest
    command: node apps/api/main.js
    container_name: api-baneverywhere
    stdin_open: true
    tty: true
    restart: unless-stopped
    expose:
      - 3333
    env_file: /.env
    depends_on:
      - mongodb
      - redis

  bot:
    image: rgolea/baneverywhere:latest
    command: node apps/bot/main.js
    container_name: bot-baneverywhere
    stdin_open: true
    tty: true
    restart: unless-stopped
    env_file: /.env
    depends_on:
      - redis

  bot-handler:
    image: rgolea/baneverywhere:latest
    command: node apps/bot-handler/main.js
    container_name: bot-handler-baneverywhere
    stdin_open: true
    tty: true
    restart: unless-stopped
    env_file: /.env
    depends_on:
      - redis
      - mongodb
  online-checker:
    image: rgolea/baneverywhere:latest
    command: node apps/online-checker/main.js
    container_name: online-checker-baneverywhere
    stdin_open: true
    tty: true
    restart: unless-stopped
    env_file: /.env
    depends_on:
      - redis
      - mongodb

  queue-processor:
    image: rgolea/baneverywhere:latest
    command: node apps/queue-processor/main.js
    container_name: queue-processor-baneverywhere
    stdin_open: true
    tty: true
    restart: unless-stopped
    env_file: /.env
    depends_on:
      - redis
      - mongodb

  mongodb:
    image: mongo:5.0.4
    container_name: mongodb-baneverywhere
    hostname: mongodb
    restart: unless-stopped
    volumes:
      - /data/mongodb:/data/db
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "mongodb"]
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongodb:27017\"}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
      interval: 10s
      start_period: 30s

  redis:
    image: redis:6.2.6
    container_name: redis-baneverywhere
    restart: unless-stopped
    command: redis-server
