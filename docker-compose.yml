version: "3.9"
services:
  nginx:
    image: rgolea/baneverywhere-proxy:latest
    container_name: baneverywhere-nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    volumes:
      - /etc/letsencrypt/:/etc/letsencrypt/

  api:
    image: rgolea/baneverywhere:latest
    command: node apps/api/main.js
    entrypoint: ["npx", "prisma", "migrate up"]
    container_name: api-baneverywhere
    stdin_open: true
    tty: true
    restart: unless-stopped
    expose:
      - 3333
    env_file: /.env
    depends_on:
      - mysql
      - redis

  bot:
    image: rgolea/baneverywhere:latest
    command: node apps/bot/main.js
    container_name: bot-baneverywhere
    stdin_open: true
    tty: true
    restart: unless-stopped
    env_file: /.env
    depends_on:
      - redis

  bot-handler:
    image: rgolea/baneverywhere:latest
    command: node apps/bot-handler/main.js
    container_name: bot-handler-baneverywhere
    stdin_open: true
    tty: true
    restart: unless-stopped
    env_file: /.env
    depends_on:
      - redis
      - mysql
  online-checker:
    image: rgolea/baneverywhere:latest
    command: node apps/online-checker/main.js
    container_name: online-checker-baneverywhere
    stdin_open: true
    tty: true
    restart: unless-stopped
    env_file: /.env
    depends_on:
      - redis
      - mysql

  queue-processor:
    image: rgolea/baneverywhere:latest
    command: node apps/queue-processor/main.js
    container_name: queue-processor-baneverywhere
    stdin_open: true
    tty: true
    restart: unless-stopped
    env_file: /.env
    depends_on:
      - redis
      - mysql

  mysql:
    image: mysql:8.0.27
    container_name: mysql-baneverywhere
    hostname: mysql
    restart: unless-stopped
    environment:
      - MYSQL_USER=root
      - MYSQL_PASSWORD=pass
      - MYSQL_DATABASE=baneverywhere
    volumes:
      - /data/mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:6.2.6
    container_name: redis-baneverywhere
    restart: unless-stopped
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
