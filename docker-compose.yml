version: "3.9"
services:
  nginx:
    image: rgolea/baneverywhere-proxy:latest
    container_name: baneverywhere-nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    volumes:
      - /etc/letsencrypt/:/etc/letsencrypt/

  migration:
    image: rgolea/baneverywhere:latest
    command: npx prisma migrate deploy
    container_name: baneverywhere-migration
    tty: true
    restart: never
    env_file: /.env
    depends_on:
      - postgres

  api:
    image: rgolea/baneverywhere-api:latest
    command: node main.js
    container_name: api-baneverywhere
    stdin_open: true
    tty: true
    restart: always
    expose:
      - 3333
    env_file: /.env
    depends_on:
      - postgres
      - redis
      - migration

  bot:
    image: rgolea/baneverywhere-bot:latest
    command: node main.js
    container_name: bot-baneverywhere
    stdin_open: true
    tty: true
    restart: always
    env_file: /.env
    depends_on:
      - redis
    deploy:
      mode: replicated
      replicas: 2

  online-checker:
    image: rgolea/baneverywhere-online-checker:latest
    command: node main.js
    container_name: online-checker-baneverywhere
    stdin_open: true
    tty: true
    restart: always
    env_file: /.env
    depends_on:
      - redis
      - postgres
      - migration

  queue-processor:
    image: rgolea/baneverywhere-queue-processor:latest
    command: node main.js
    container_name: queue-processor-baneverywhere
    stdin_open: true
    tty: true
    restart: always
    env_file: /.env
    depends_on:
      - redis
      - postgres
      - migration

  postgres:
    image: postgres:10
    container_name: postgres-baneverywhere
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=baneverywhere
    expose:
      - 5432
    volumes:
      - /data/postgresql/:/var/lib/postgresql/data
    depends_on:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2.6
    container_name: redis-baneverywhere
    restart: always
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
