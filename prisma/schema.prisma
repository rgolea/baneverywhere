// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int      @id @default(autoincrement())
  login             String   @unique
  display_name      String   @unique
  twitchId          String   @unique
  profile_image_url String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  machineUUID String?
  machine     Machine?   @relation("UsersOnMachine", fields: [machineUUID], references: [uuid])

  @@map("users")
}

enum BanEverywhereSettings {
  AUTOMATIC
  WITH_VALIDATION
  NONE
}

model Settings {
  id           Int                   @id @default(autoincrement())
  fromId       String
  fromUsername String
  toId         String
  toUsername   String
  settings     BanEverywhereSettings @default(NONE)
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @updatedAt

  @@unique([fromId, toId])
  @@unique([fromUsername, toUsername])
  @@map("settings")
}

enum Action {
  BAN
  UNBAN
}

model Actions {
  id        Int      @id @default(autoincrement())
  action    Action
  user      String
  streamer  String
  moderator String
  reason    String?
  queueFor  String
  inQueue   Boolean? @default(false)
  approved  Boolean?
  processed Boolean? @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("actions")
}

model Machine {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[] @relation("UsersOnMachine")
  @@map("machines")
}
